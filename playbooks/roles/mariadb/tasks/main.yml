---
# ======================================================================
# 區塊 1: 根據作業系統安裝 MariaDB 套件
# (此區塊保持不變)
# ======================================================================
- include: centos.yml
  when: ansible_distribution == 'CentOS' and ansible_distribution_major_version|int >= 6

- include: ubuntu-trusty.yml
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '14.04'

- include: ubuntu-xenial_bionic.yml
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_major_version|int >= 16

- include_tasks: debian.yml
  when: ansible_distribution == 'Debian'

# ======================================================================
# 區塊 2: 寫入所有 MariaDB 設定檔
# (修正：移除了可能導致服務重啟失敗的設定)
# ======================================================================

- name: Add main configuration from template (for non-Debian)
  template:
    src: '{{ mysql_conf_tpl }}'
    dest: '{{ mysql_conf_dir[ansible_distribution] }}/{{ mysql_conf_file }}'
    owner: root
    group: root
    mode: 0644
  when: mysql_conf_tpl != 'change_me' and ansible_distribution != 'Debian'
  notify: restart mysql

- name: Add main configuration from template (for Debian)
  template:
    src: '{{ mysql_conf_tpl }}'
    dest: '{{ mysql_conf_dir[ansible_distribution] }}/{{ mysql_conf_file }}'
    owner: root
    group: root
    mode: 0644
  when: mysql_conf_tpl != 'change_me' and ansible_distribution == 'Debian'
  notify: restart mysql

- name: Ensure mariadb.conf.d directory is included
  blockinfile:
    path: /etc/mysql/conf.d/settings.cnf
    block: |
      # Import all .cnf files from configuration directory
      !includedir /etc/mysql/mariadb.conf.d/
    create: yes
  become: yes
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'
  notify: restart mysql

- name: Add Frappe/ERPNext required MariaDB configurations
  blockinfile:
    path: /etc/mysql/mariadb.conf.d/erpnext.cnf
    block: |
      # 只保留 ERPNext 必要的設定，移除 pid-file 和 socket 以避免與系統預設衝突
      [mysqld]
      default-authentication-plugin=mysql_native_password
      character-set-client-handshake = FALSE
      character-set-server = utf8mb4
      collation-server = utf8mb4_unicode_ci

      [mysql]
      default-character-set = utf8mb4
    create: yes
  become: yes
  # 由於這是 root 擁有的檔案，不需要 become_user: root，become: yes 即可
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'
  notify: restart mysql

# ======================================================================
# 區塊 3: 強制執行 Handler，讓服務帶著最新設定重啟和運行
# ======================================================================
- name: Flush handlers to apply all configurations and restart MariaDB
  meta: flush_handlers

- name: Ensure MariaDB service is running and enabled after restart
  service:
    name: mysql
    state: started
    enabled: yes
  become: yes

# ======================================================================
# 區塊 4: 【冪等】設定 MariaDB root 使用者
# (重構：採用單一冪等模組管理，移除脆弱的 command 指令)
# ======================================================================

# 步驟 1: 為 root 用戶建立 .my.cnf 檔案，這是後續所有操作成功的關鍵。
# 這個檔案確保了 playbook 的冪等性，讓 Ansible 在密碼已設定後仍能登入管理。
# (此任務保持不變)
- name: Create .my.cnf for root user to allow passwordless CLI management
  template:
    src: root-my.cnf.j2
    dest: /root/.my.cnf
    owner: root
    group: root
    mode: '0600'
  become: yes
  when: mysql_root_password is defined and mysql_root_password

# 步驟 2: 【核心修正】使用單一、冪等的 mysql_user 任務，並明確指定憑證檔案路徑。
# This is the task that is currently failing. REMOVE IT.
- name: Check current auth plugin for root@localhost
  command: mysql -NBe "SELECT plugin FROM mysql.user WHERE User='root' AND Host='localhost';"
  register: root_auth_plugin
  changed_when: false
  become: yes
  when: mysql_root_password is defined and mysql_root_password

- name: Set native password plugin if unix_socket is currently used
  command: "mysql -NBe \"ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '{{ mysql_root_password }}'; FLUSH PRIVILEGES;\""
  become: yes
  when:
    - mysql_root_password is defined and mysql_root_password
    - "'unix_socket' in root_auth_plugin.stdout"

# -------------------- 已移除的任務 --------------------
# - name: Check current auth plugin for root@localhost  <--- 移除，讓模組處理
# - name: Atomically set native password plugin ...      <--- 移除，這是錯誤的根源
# - name: Ensure MariaDB root user has all privileges    <--- 移除，已合併到上面的任務中
# --------------------------------------------------------
# ======================================================================
# 區塊 5: 執行安全腳本和偵錯
# ======================================================================
- name: Debug message indicating password variable is set
  debug:
    msg: "MariaDB root password variable is set. Proceeding with secure installation."
  when: mysql_root_password is defined and mysql_root_password

- name: Include mysql_secure_installation tasks
  include_tasks: mysql_secure_installation.yml
  when: mysql_root_password is defined and mysql_root_password

- name: Debug secure installation variable
  debug:
    var: mysql_secure_installation
  when: mysql_secure_installation is defined and mysql_secure_installation